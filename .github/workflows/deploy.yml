name: Build, Test, and Deploy to EC2 using Docker

on:
  push:
    branches:
      - main   # Change this if you use a different branch for production

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code from the GitHub repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Docker Hub username (saved in GitHub Secrets)
          password: ${{ secrets.DOCKER_PASSWORD }}  # Docker Hub personal access token (saved in GitHub Secrets)

      # Step 3: Run Unit Tests
      - name: Run Unit Tests
        run: |
          cd TrackMyBudget/TrackMyBudget.Tests  # Change this path to where your test project is located
          dotnet test

      # Step 4: Build and Push Docker Image to Docker Hub
      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/trackmybudget-api:latest -f ./TrackMyBudget/TrackMyBudget.Application/Dockerfile .
          docker push ${{ secrets.DOCKER_USERNAME }}/trackmybudget-api:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      # Step 5: Create the .ssh directory and write the EC2 private key to a file
      - name: Create SSH key file
        run: |
          mkdir -p /home/runner/.ssh
          echo "${{ secrets.EC2_KEY }}" > /home/runner/.ssh/TrackMyBudgetKey.pem
          chmod 600 /home/runner/.ssh/TrackMyBudgetKey.pem

      # Step 6: SSH into EC2, pull the latest Docker image, and run the container
      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i /home/runner/.ssh/TrackMyBudgetKey.pem ec2-user@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
            docker pull ${{ secrets.DOCKER_USERNAME }}/trackmybudget-api:latest
            docker stop trackmybudget-container || true
            docker rm trackmybudget-container || true
            docker run -d -p 80:8080 --name trackmybudget-container --env ASPNETCORE_ENVIRONMENT=Production ${{ secrets.DOCKER_USERNAME }}/trackmybudget-api:latest
          EOF
