name: Deploy to EC2

on:
  push:
    branches:
      - main   # Change this if you use a different branch for production

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code from the GitHub repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: List the contents of the current directory (for debugging)
      - name: List directory contents
        run: ls -la

      # Step 3: Change directory and publish .NET Core API in the same run step
      - name: Publish .NET Core API
        run: |
          cd TrackMyBudget
          ls -la  # To confirm we're in the right directory
          dotnet publish -c Release -o ./publish

      # Step 4: Run Unit Tests
      - name: Run Unit Tests
        run: |
            cd TrackMyBudget/Tests  # Change this path to where your test project is located
            dotnet test
        
      # Step 5: Create the .ssh directory and write the EC2 private key to a file
      - name: Create SSH key file
        run: |
          mkdir -p /home/runner/.ssh
          echo "${{ secrets.EC2_KEY }}" > /home/runner/.ssh/TrackMyBudgetKey.pem
          chmod 600 /home/runner/.ssh/TrackMyBudgetKey.pem

      # Step 6: Copy the published files to the EC2 instance using SCP
      - name: Copy files to EC2
        run: |
          scp -o StrictHostKeyChecking=no -i /home/runner/.ssh/TrackMyBudgetKey.pem -r ./TrackMyBudget/publish/* ec2-user@${{ secrets.EC2_PUBLIC_IP }}:/home/ec2-user/TrackMyBudget

      # Step 7: SSH into the EC2 instance and restart the service
      - name: SSH into EC2 and restart service
        run: |
          ssh -o StrictHostKeyChecking=no -i /home/runner/.ssh/TrackMyBudgetKey.pem ec2-user@${{ secrets.EC2_PUBLIC_IP }} "sudo systemctl restart trackmybudget"
